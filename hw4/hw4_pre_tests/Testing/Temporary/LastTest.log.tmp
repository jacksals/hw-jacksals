Start testing: Mar 31 18:08 PDT
----------------------------------------------------------
1/35 Testing: DatabaseReadback.EmptyDatabase
1/35 Test: DatabaseReadback.EmptyDatabase
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.EmptyDatabase"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.EmptyDatabase" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.EmptyDatabase
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.EmptyDatabase
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/EmptyDatabase/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/EmptyDatabase/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/EmptyDatabase/output.txt
[       OK ] DatabaseReadback.EmptyDatabase (924 ms)
[----------] 1 test from DatabaseReadback (924 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (924 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.95 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.EmptyDatabase" end time: Mar 31 18:08 PDT
"DatabaseReadback.EmptyDatabase" time elapsed: 00:00:00
----------------------------------------------------------

2/35 Testing: DatabaseReadback.Book
2/35 Test: DatabaseReadback.Book
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.Book"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.Book" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.Book
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.Book
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Book/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Book/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Book/output.txt
[       OK ] DatabaseReadback.Book (920 ms)
[----------] 1 test from DatabaseReadback (920 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (920 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.92 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.Book" end time: Mar 31 18:08 PDT
"DatabaseReadback.Book" time elapsed: 00:00:00
----------------------------------------------------------

3/35 Testing: DatabaseReadback.Clothing
3/35 Test: DatabaseReadback.Clothing
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.Clothing"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.Clothing" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.Clothing
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.Clothing
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Clothing/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Clothing/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Clothing/output.txt
[       OK ] DatabaseReadback.Clothing (889 ms)
[----------] 1 test from DatabaseReadback (889 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (889 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.89 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.Clothing" end time: Mar 31 18:08 PDT
"DatabaseReadback.Clothing" time elapsed: 00:00:00
----------------------------------------------------------

4/35 Testing: DatabaseReadback.Movie
4/35 Test: DatabaseReadback.Movie
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.Movie"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.Movie" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.Movie
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.Movie
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Movie/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Movie/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Movie/output.txt
[       OK ] DatabaseReadback.Movie (969 ms)
[----------] 1 test from DatabaseReadback (969 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (969 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.97 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.Movie" end time: Mar 31 18:08 PDT
"DatabaseReadback.Movie" time elapsed: 00:00:00
----------------------------------------------------------

5/35 Testing: DatabaseReadback.User
5/35 Test: DatabaseReadback.User
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.User"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.User" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.User
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.User
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/User/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/User/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/User/output.txt
[       OK ] DatabaseReadback.User (969 ms)
[----------] 1 test from DatabaseReadback (969 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (969 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.97 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.User" end time: Mar 31 18:08 PDT
"DatabaseReadback.User" time elapsed: 00:00:00
----------------------------------------------------------

6/35 Testing: DatabaseReadback.Mixed
6/35 Test: DatabaseReadback.Mixed
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.Mixed"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.Mixed" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.Mixed
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.Mixed
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Mixed/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Mixed/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Mixed/output.txt
[       OK ] DatabaseReadback.Mixed (982 ms)
[----------] 1 test from DatabaseReadback (982 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (982 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.98 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.Mixed" end time: Mar 31 18:08 PDT
"DatabaseReadback.Mixed" time elapsed: 00:00:00
----------------------------------------------------------

7/35 Testing: ConsoleInterface.Quit
7/35 Test: ConsoleInterface.Quit
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.Quit"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.Quit" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.Quit
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.Quit
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Quit/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Quit/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/Quit/output.txt
[       OK ] ConsoleInterface.Quit (1419 ms)
[----------] 1 test from ConsoleInterface (1419 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1419 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.42 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.Quit" end time: Mar 31 18:08 PDT
"ConsoleInterface.Quit" time elapsed: 00:00:01
----------------------------------------------------------

8/35 Testing: ConsoleInterface.HitBook
8/35 Test: ConsoleInterface.HitBook
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.HitBook"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.HitBook" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.HitBook
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.HitBook
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitBook/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitBook/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitBook/output.txt
[       OK ] ConsoleInterface.HitBook (1701 ms)
[----------] 1 test from ConsoleInterface (1701 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1702 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.71 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.HitBook" end time: Mar 31 18:08 PDT
"ConsoleInterface.HitBook" time elapsed: 00:00:01
----------------------------------------------------------

9/35 Testing: ConsoleInterface.HitClothing
9/35 Test: ConsoleInterface.HitClothing
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.HitClothing"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.HitClothing" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.HitClothing
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.HitClothing
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitClothing/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitClothing/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitClothing/output.txt
[       OK ] ConsoleInterface.HitClothing (1166 ms)
[----------] 1 test from ConsoleInterface (1166 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1166 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.17 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.HitClothing" end time: Mar 31 18:08 PDT
"ConsoleInterface.HitClothing" time elapsed: 00:00:01
----------------------------------------------------------

10/35 Testing: ConsoleInterface.HitMovie
10/35 Test: ConsoleInterface.HitMovie
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.HitMovie"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.HitMovie" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.HitMovie
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.HitMovie
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitMovie/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitMovie/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HitMovie/output.txt
[       OK ] ConsoleInterface.HitMovie (1051 ms)
[----------] 1 test from ConsoleInterface (1051 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1051 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.HitMovie" end time: Mar 31 18:08 PDT
"ConsoleInterface.HitMovie" time elapsed: 00:00:01
----------------------------------------------------------

11/35 Testing: ConsoleInterface.CaseInsensitive
11/35 Test: ConsoleInterface.CaseInsensitive
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.CaseInsensitive"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.CaseInsensitive" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.CaseInsensitive
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.CaseInsensitive
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/CaseInsensitive/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/CaseInsensitive/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/CaseInsensitive/output.txt
[       OK ] ConsoleInterface.CaseInsensitive (1044 ms)
[----------] 1 test from ConsoleInterface (1044 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1044 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.CaseInsensitive" end time: Mar 31 18:08 PDT
"ConsoleInterface.CaseInsensitive" time elapsed: 00:00:01
----------------------------------------------------------

12/35 Testing: ConsoleInterface.HugeQuantity
12/35 Test: ConsoleInterface.HugeQuantity
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.HugeQuantity"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.HugeQuantity" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.HugeQuantity
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.HugeQuantity
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HugeQuantity/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HugeQuantity/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/HugeQuantity/output.txt
[       OK ] ConsoleInterface.HugeQuantity (985 ms)
[----------] 1 test from ConsoleInterface (985 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (985 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.99 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.HugeQuantity" end time: Mar 31 18:08 PDT
"ConsoleInterface.HugeQuantity" time elapsed: 00:00:00
----------------------------------------------------------

13/35 Testing: ConsoleInterface.AddOneToCart
13/35 Test: ConsoleInterface.AddOneToCart
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddOneToCart"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddOneToCart" start time: Mar 31 18:08 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddOneToCart
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddOneToCart
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddOneToCart/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddOneToCart/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddOneToCart/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Data Abstraction & Problem Solving with C++,
 info: Author: Carrano and Henry ISBN: 978-013292372-9,
 stock: 20 left.,
 price: 79.99
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddOneToCart (1054 ms)
[----------] 1 test from ConsoleInterface (1054 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1054 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddOneToCart

 1 FAILED TEST
<end of output>
Test time =   1.06 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddOneToCart" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddOneToCart" time elapsed: 00:00:01
----------------------------------------------------------

14/35 Testing: Database.BuyCart
14/35 Test: Database.BuyCart
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=Database.BuyCart"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"Database.BuyCart" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Database.BuyCart
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Database
[ RUN      ] Database.BuyCart
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCart/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCart/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCart/output.txt
[       OK ] Database.BuyCart (1037 ms)
[----------] 1 test from Database (1037 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1037 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.04 sec
----------------------------------------------------------
Test Passed.
"Database.BuyCart" end time: Mar 31 18:09 PDT
"Database.BuyCart" time elapsed: 00:00:01
----------------------------------------------------------

15/35 Testing: DatabaseReadback.ThreeBooks
15/35 Test: DatabaseReadback.ThreeBooks
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.ThreeBooks"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.ThreeBooks" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.ThreeBooks
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.ThreeBooks
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeBooks/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeBooks/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeBooks/output.txt
[       OK ] DatabaseReadback.ThreeBooks (1001 ms)
[----------] 1 test from DatabaseReadback (1001 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1001 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.00 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.ThreeBooks" end time: Mar 31 18:09 PDT
"DatabaseReadback.ThreeBooks" time elapsed: 00:00:01
----------------------------------------------------------

16/35 Testing: DatabaseReadback.ThreeClothes
16/35 Test: DatabaseReadback.ThreeClothes
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.ThreeClothes"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.ThreeClothes" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.ThreeClothes
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.ThreeClothes
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeClothes/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeClothes/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeClothes/output.txt
[       OK ] DatabaseReadback.ThreeClothes (1020 ms)
[----------] 1 test from DatabaseReadback (1020 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1020 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.02 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.ThreeClothes" end time: Mar 31 18:09 PDT
"DatabaseReadback.ThreeClothes" time elapsed: 00:00:01
----------------------------------------------------------

17/35 Testing: DatabaseReadback.ThreeMovies
17/35 Test: DatabaseReadback.ThreeMovies
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=DatabaseReadback.ThreeMovies"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"DatabaseReadback.ThreeMovies" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = DatabaseReadback.ThreeMovies
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from DatabaseReadback
[ RUN      ] DatabaseReadback.ThreeMovies
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeMovies/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeMovies/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ThreeMovies/output.txt
[       OK ] DatabaseReadback.ThreeMovies (978 ms)
[----------] 1 test from DatabaseReadback (978 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (979 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   0.98 sec
----------------------------------------------------------
Test Passed.
"DatabaseReadback.ThreeMovies" end time: Mar 31 18:09 PDT
"DatabaseReadback.ThreeMovies" time elapsed: 00:00:00
----------------------------------------------------------

18/35 Testing: ConsoleInterface.AddTwoItems
18/35 Test: ConsoleInterface.AddTwoItems
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddTwoItems"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddTwoItems" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddTwoItems
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddTwoItems
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoItems/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoItems/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoItems/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Hidden Figures DVD,
 info: Genre: Drama Rating: PG,
 stock: 1 left.,
 price: 17.99
}, {name: Great Men and Women of Troy,
 info: Author: Tommy Trojan ISBN: 978-000000000-1,
 stock: 5 left.,
 price: 19.5
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddTwoItems (1102 ms)
[----------] 1 test from ConsoleInterface (1102 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1102 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddTwoItems

 1 FAILED TEST
<end of output>
Test time =   1.10 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddTwoItems" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddTwoItems" time elapsed: 00:00:01
----------------------------------------------------------

19/35 Testing: ConsoleInterface.AddTwoIdenticalItems
19/35 Test: ConsoleInterface.AddTwoIdenticalItems
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddTwoIdenticalItems"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddTwoIdenticalItems" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddTwoIdenticalItems
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddTwoIdenticalItems
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoIdenticalItems/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoIdenticalItems/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoIdenticalItems/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Hidden Figures DVD,
 info: Genre: Drama Rating: PG,
 stock: 1 left.,
 price: 17.99
}, {name: Hidden Figures DVD,
 info: Genre: Drama Rating: PG,
 stock: 1 left.,
 price: 17.99
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddTwoIdenticalItems (1099 ms)
[----------] 1 test from ConsoleInterface (1099 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1099 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddTwoIdenticalItems

 1 FAILED TEST
<end of output>
Test time =   1.10 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddTwoIdenticalItems" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddTwoIdenticalItems" time elapsed: 00:00:01
----------------------------------------------------------

20/35 Testing: Database.BuyCartTwoItems
20/35 Test: Database.BuyCartTwoItems
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=Database.BuyCartTwoItems"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"Database.BuyCartTwoItems" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Database.BuyCartTwoItems
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Database
[ RUN      ] Database.BuyCartTwoItems
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartTwoItems/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartTwoItems/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartTwoItems/output.txt
==5753== Invalid read of size 8
==5753==    at 0x4C32160: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5753==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5753==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5753==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5753==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5753==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5753==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5753==    by 0x403452: main (amazon.cpp:121)
==5753==  Address 0x5ac31e0 is 0 bytes after a block of size 16 alloc'd
==5753==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x406D0F: __gnu_cxx::new_allocator<Product*>::allocate(unsigned long, void const*) (new_allocator.h:104)
==5753==    by 0x4064C0: std::allocator_traits<std::allocator<Product*> >::allocate(std::allocator<Product*>&, unsigned long) (alloc_traits.h:491)
==5753==    by 0x405D71: std::_Vector_base<Product*, std::allocator<Product*> >::_M_allocate(unsigned long) (stl_vector.h:170)
==5753==    by 0x4158AF: void std::vector<Product*, std::allocator<Product*> >::_M_emplace_back_aux<Product* const&>(Product* const&) (vector.tcc:412)
==5753==    by 0x413FFE: std::vector<Product*, std::allocator<Product*> >::push_back(Product* const&) (stl_vector.h:923)
==5753==    by 0x4131E4: MyDataStore::addcart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::vector<Product*, std::allocator<Product*> >) (mydatastore.cpp:233)
==5753==    by 0x403319: main (amazon.cpp:111)
==5753== 
==5753== Invalid write of size 8
==5753==    at 0x4C32163: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5753==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5753==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5753==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5753==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5753==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5753==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5753==    by 0x403452: main (amazon.cpp:121)
==5753==  Address 0x5ac31e0 is 0 bytes after a block of size 16 alloc'd
==5753==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x406D0F: __gnu_cxx::new_allocator<Product*>::allocate(unsigned long, void const*) (new_allocator.h:104)
==5753==    by 0x4064C0: std::allocator_traits<std::allocator<Product*> >::allocate(std::allocator<Product*>&, unsigned long) (alloc_traits.h:491)
==5753==    by 0x405D71: std::_Vector_base<Product*, std::allocator<Product*> >::_M_allocate(unsigned long) (stl_vector.h:170)
==5753==    by 0x4158AF: void std::vector<Product*, std::allocator<Product*> >::_M_emplace_back_aux<Product* const&>(Product* const&) (vector.tcc:412)
==5753==    by 0x413FFE: std::vector<Product*, std::allocator<Product*> >::push_back(Product* const&) (stl_vector.h:923)
==5753==    by 0x4131E4: MyDataStore::addcart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::vector<Product*, std::allocator<Product*> >) (mydatastore.cpp:233)
==5753==    by 0x403319: main (amazon.cpp:111)
==5753== 
==5753== Invalid read of size 8
==5753==    at 0x4C3216E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5753==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5753==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5753==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5753==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5753==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5753==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5753==    by 0x403452: main (amazon.cpp:121)
==5753==  Address 0x5ac31f0 is 16 bytes after a block of size 16 alloc'd
==5753==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x406D0F: __gnu_cxx::new_allocator<Product*>::allocate(unsigned long, void const*) (new_allocator.h:104)
==5753==    by 0x4064C0: std::allocator_traits<std::allocator<Product*> >::allocate(std::allocator<Product*>&, unsigned long) (alloc_traits.h:491)
==5753==    by 0x405D71: std::_Vector_base<Product*, std::allocator<Product*> >::_M_allocate(unsigned long) (stl_vector.h:170)
==5753==    by 0x4158AF: void std::vector<Product*, std::allocator<Product*> >::_M_emplace_back_aux<Product* const&>(Product* const&) (vector.tcc:412)
==5753==    by 0x413FFE: std::vector<Product*, std::allocator<Product*> >::push_back(Product* const&) (stl_vector.h:923)
==5753==    by 0x4131E4: MyDataStore::addcart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::vector<Product*, std::allocator<Product*> >) (mydatastore.cpp:233)
==5753==    by 0x403319: main (amazon.cpp:111)
==5753== 
==5753== 
==5753== Process terminating with default action of signal 11 (SIGSEGV)
==5753==  Access not within mapped region at address 0x5EA5000
==5753==    at 0x4C3216E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5753==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5753==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5753==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5753==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5753==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5753==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5753==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5753==    by 0x403452: main (amazon.cpp:121)
==5753==  If you believe this happened as a result of a stack
==5753==  overflow in your program's main thread (unlikely but
==5753==  possible), you can try to increase the size of the
==5753==  main thread stack using the --main-stacksize= flag.
==5753==  The main thread stack size used in this run was 8388608.
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests.cpp:1088: Failure
Value of: checkDatabase(commands, inputDatabase, expectedDatabase)
  Actual: false (User program crashed: Segmentation fault)
Expected: true
[  FAILED  ] Database.BuyCartTwoItems (1604 ms)
[----------] 1 test from Database (1604 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1604 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Database.BuyCartTwoItems

 1 FAILED TEST
<end of output>
Test time =   1.61 sec
----------------------------------------------------------
Test Failed.
"Database.BuyCartTwoItems" end time: Mar 31 18:09 PDT
"Database.BuyCartTwoItems" time elapsed: 00:00:01
----------------------------------------------------------

21/35 Testing: ConsoleInterface.OrMultipleHit
21/35 Test: ConsoleInterface.OrMultipleHit
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.OrMultipleHit"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.OrMultipleHit" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.OrMultipleHit
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.OrMultipleHit
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/OrMultipleHit/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/OrMultipleHit/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/OrMultipleHit/output.txt
[       OK ] ConsoleInterface.OrMultipleHit (1042 ms)
[----------] 1 test from ConsoleInterface (1042 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1042 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.04 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.OrMultipleHit" end time: Mar 31 18:09 PDT
"ConsoleInterface.OrMultipleHit" time elapsed: 00:00:01
----------------------------------------------------------

22/35 Testing: ConsoleInterface.AndMultipleHit
22/35 Test: ConsoleInterface.AndMultipleHit
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AndMultipleHit"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AndMultipleHit" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AndMultipleHit
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AndMultipleHit
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AndMultipleHit/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AndMultipleHit/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AndMultipleHit/output.txt
[       OK ] ConsoleInterface.AndMultipleHit (1070 ms)
[----------] 1 test from ConsoleInterface (1070 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1070 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"ConsoleInterface.AndMultipleHit" end time: Mar 31 18:09 PDT
"ConsoleInterface.AndMultipleHit" time elapsed: 00:00:01
----------------------------------------------------------

23/35 Testing: ConsoleInterface.AddToTwoUsersCarts
23/35 Test: ConsoleInterface.AddToTwoUsersCarts
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddToTwoUsersCarts"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddToTwoUsersCarts" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddToTwoUsersCarts
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddToTwoUsersCarts
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddToTwoUsersCarts/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddToTwoUsersCarts/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddToTwoUsersCarts/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Great Men and Women of Troy,
 info: Author: Tommy Trojan ISBN: 978-000000000-1,
 stock: 5 left.,
 price: 19.5
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddToTwoUsersCarts (1052 ms)
[----------] 1 test from ConsoleInterface (1052 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1052 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddToTwoUsersCarts

 1 FAILED TEST
<end of output>
Test time =   1.06 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddToTwoUsersCarts" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddToTwoUsersCarts" time elapsed: 00:00:01
----------------------------------------------------------

24/35 Testing: ConsoleInterface.AddSameProductTwoUsersCarts
24/35 Test: ConsoleInterface.AddSameProductTwoUsersCarts
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddSameProductTwoUsersCarts"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddSameProductTwoUsersCarts" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddSameProductTwoUsersCarts
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddSameProductTwoUsersCarts
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddSameProductTwoUsersCarts/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddSameProductTwoUsersCarts/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddSameProductTwoUsersCarts/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: 00001010 00001111,
 info: Author: A. Robot ISBN: 111-000000000-1,
 stock: 5 left.,
 price: 0.11
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddSameProductTwoUsersCarts (1050 ms)
[----------] 1 test from ConsoleInterface (1050 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1050 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddSameProductTwoUsersCarts

 1 FAILED TEST
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddSameProductTwoUsersCarts" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddSameProductTwoUsersCarts" time elapsed: 00:00:01
----------------------------------------------------------

25/35 Testing: ConsoleInterface.AddTwoProductsTwoUsers
25/35 Test: ConsoleInterface.AddTwoProductsTwoUsers
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddTwoProductsTwoUsers"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddTwoProductsTwoUsers" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddTwoProductsTwoUsers
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddTwoProductsTwoUsers
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoProductsTwoUsers/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoProductsTwoUsers/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddTwoProductsTwoUsers/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Great Men and Women of Troy,
 info: Author: Tommy Trojan ISBN: 978-000000000-1,
 stock: 5 left.,
 price: 19.5
}, {name: Hidden Figures DVD,
 info: Genre: Drama Rating: PG,
 stock: 5 left.,
 price: 17.99
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddTwoProductsTwoUsers (1128 ms)
[----------] 1 test from ConsoleInterface (1128 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1128 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddTwoProductsTwoUsers

 1 FAILED TEST
<end of output>
Test time =   1.13 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddTwoProductsTwoUsers" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddTwoProductsTwoUsers" time elapsed: 00:00:01
----------------------------------------------------------

26/35 Testing: Database.BuyTwoProductsTwoUsers
26/35 Test: Database.BuyTwoProductsTwoUsers
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=Database.BuyTwoProductsTwoUsers"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"Database.BuyTwoProductsTwoUsers" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Database.BuyTwoProductsTwoUsers
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Database
[ RUN      ] Database.BuyTwoProductsTwoUsers
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyTwoProductsTwoUsers/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyTwoProductsTwoUsers/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyTwoProductsTwoUsers/output.txt
==5771== Invalid read of size 8
==5771==    at 0x4C32160: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5771==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5771==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5771==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5771==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5771==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5771==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5771==    by 0x403452: main (amazon.cpp:121)
==5771==  Address 0x5ac37d0 is 0 bytes after a block of size 16 alloc'd
==5771==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x406D0F: __gnu_cxx::new_allocator<Product*>::allocate(unsigned long, void const*) (new_allocator.h:104)
==5771==    by 0x4064C0: std::allocator_traits<std::allocator<Product*> >::allocate(std::allocator<Product*>&, unsigned long) (alloc_traits.h:491)
==5771==    by 0x405D71: std::_Vector_base<Product*, std::allocator<Product*> >::_M_allocate(unsigned long) (stl_vector.h:170)
==5771==    by 0x4158AF: void std::vector<Product*, std::allocator<Product*> >::_M_emplace_back_aux<Product* const&>(Product* const&) (vector.tcc:412)
==5771==    by 0x413FFE: std::vector<Product*, std::allocator<Product*> >::push_back(Product* const&) (stl_vector.h:923)
==5771==    by 0x4131E4: MyDataStore::addcart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::vector<Product*, std::allocator<Product*> >) (mydatastore.cpp:233)
==5771==    by 0x403319: main (amazon.cpp:111)
==5771== 
==5771== Invalid write of size 8
==5771==    at 0x4C32163: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5771==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5771==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5771==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5771==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5771==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5771==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5771==    by 0x403452: main (amazon.cpp:121)
==5771==  Address 0x5ac37d0 is 0 bytes after a block of size 16 alloc'd
==5771==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x406D0F: __gnu_cxx::new_allocator<Product*>::allocate(unsigned long, void const*) (new_allocator.h:104)
==5771==    by 0x4064C0: std::allocator_traits<std::allocator<Product*> >::allocate(std::allocator<Product*>&, unsigned long) (alloc_traits.h:491)
==5771==    by 0x405D71: std::_Vector_base<Product*, std::allocator<Product*> >::_M_allocate(unsigned long) (stl_vector.h:170)
==5771==    by 0x4158AF: void std::vector<Product*, std::allocator<Product*> >::_M_emplace_back_aux<Product* const&>(Product* const&) (vector.tcc:412)
==5771==    by 0x413FFE: std::vector<Product*, std::allocator<Product*> >::push_back(Product* const&) (stl_vector.h:923)
==5771==    by 0x4131E4: MyDataStore::addcart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::vector<Product*, std::allocator<Product*> >) (mydatastore.cpp:233)
==5771==    by 0x403319: main (amazon.cpp:111)
==5771== 
==5771== Invalid read of size 8
==5771==    at 0x4C3216E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5771==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5771==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5771==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5771==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5771==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5771==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5771==    by 0x403452: main (amazon.cpp:121)
==5771==  Address 0x5ac37e0 is 16 bytes after a block of size 16 alloc'd
==5771==    at 0x4C2E17F: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x406D0F: __gnu_cxx::new_allocator<Product*>::allocate(unsigned long, void const*) (new_allocator.h:104)
==5771==    by 0x4064C0: std::allocator_traits<std::allocator<Product*> >::allocate(std::allocator<Product*>&, unsigned long) (alloc_traits.h:491)
==5771==    by 0x405D71: std::_Vector_base<Product*, std::allocator<Product*> >::_M_allocate(unsigned long) (stl_vector.h:170)
==5771==    by 0x4158AF: void std::vector<Product*, std::allocator<Product*> >::_M_emplace_back_aux<Product* const&>(Product* const&) (vector.tcc:412)
==5771==    by 0x413FFE: std::vector<Product*, std::allocator<Product*> >::push_back(Product* const&) (stl_vector.h:923)
==5771==    by 0x4131E4: MyDataStore::addcart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::vector<Product*, std::allocator<Product*> >) (mydatastore.cpp:233)
==5771==    by 0x403319: main (amazon.cpp:111)
==5771== 
==5771== 
==5771== Process terminating with default action of signal 11 (SIGSEGV)
==5771==  Access not within mapped region at address 0x5EA5000
==5771==    at 0x4C3216E: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==5771==    by 0x418AE7: Product** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<Product*>(Product* const*, Product* const*, Product**) (stl_algobase.h:384)
==5771==    by 0x418616: Product** std::__copy_move_a<true, Product**, Product**>(Product**, Product**, Product**) (stl_algobase.h:402)
==5771==    by 0x4181E3: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::__copy_move_a2<true, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:438)
==5771==    by 0x417846: __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > std::move<__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > > >(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >, __gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (stl_algobase.h:504)
==5771==    by 0x415DAA: std::vector<Product*, std::allocator<Product*> >::_M_erase(__gnu_cxx::__normal_iterator<Product**, std::vector<Product*, std::allocator<Product*> > >) (vector.tcc:145)
==5771==    by 0x4144EA: std::vector<Product*, std::allocator<Product*> >::erase(__gnu_cxx::__normal_iterator<Product* const*, std::vector<Product*, std::allocator<Product*> > >) (stl_vector.h:1147)
==5771==    by 0x412DBE: MyDataStore::buycart(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (mydatastore.cpp:182)
==5771==    by 0x403452: main (amazon.cpp:121)
==5771==  If you believe this happened as a result of a stack
==5771==  overflow in your program's main thread (unlikely but
==5771==  possible), you can try to increase the size of the
==5771==  main thread stack using the --main-stacksize= flag.
==5771==  The main thread stack size used in this run was 8388608.
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests.cpp:1701: Failure
Value of: checkDatabase(commands, inputDatabase, expectedDatabase)
  Actual: false (User program crashed: Segmentation fault)
Expected: true
[  FAILED  ] Database.BuyTwoProductsTwoUsers (1707 ms)
[----------] 1 test from Database (1707 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1707 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] Database.BuyTwoProductsTwoUsers

 1 FAILED TEST
<end of output>
Test time =   1.71 sec
----------------------------------------------------------
Test Failed.
"Database.BuyTwoProductsTwoUsers" end time: Mar 31 18:09 PDT
"Database.BuyTwoProductsTwoUsers" time elapsed: 00:00:01
----------------------------------------------------------

27/35 Testing: ConsoleInterface.BuyCartInsufficientFunds
27/35 Test: ConsoleInterface.BuyCartInsufficientFunds
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.BuyCartInsufficientFunds"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.BuyCartInsufficientFunds" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.BuyCartInsufficientFunds
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.BuyCartInsufficientFunds
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartInsufficientFunds/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartInsufficientFunds/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartInsufficientFunds/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Data Abstraction & Problem Solving with C++,
 info: Author: Carrano and Henry ISBN: 978-013292372-9,
 stock: 20 left.,
 price: 79.99
}, {name: Data Abstraction & Problem Solving with C++,
 info: Author: Carrano and Henry ISBN: 978-013292372-9,
 stock: 20 left.,
 price: 79.99
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.BuyCartInsufficientFunds (1065 ms)
[----------] 1 test from ConsoleInterface (1065 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1065 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.BuyCartInsufficientFunds

 1 FAILED TEST
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.BuyCartInsufficientFunds" end time: Mar 31 18:09 PDT
"ConsoleInterface.BuyCartInsufficientFunds" time elapsed: 00:00:01
----------------------------------------------------------

28/35 Testing: Database.BuyCartInsufficientFunds
28/35 Test: Database.BuyCartInsufficientFunds
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=Database.BuyCartInsufficientFunds"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"Database.BuyCartInsufficientFunds" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Database.BuyCartInsufficientFunds
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Database
[ RUN      ] Database.BuyCartInsufficientFunds
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartInsufficientFunds/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartInsufficientFunds/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartInsufficientFunds/output.txt
[       OK ] Database.BuyCartInsufficientFunds (1070 ms)
[----------] 1 test from Database (1070 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1070 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.07 sec
----------------------------------------------------------
Test Passed.
"Database.BuyCartInsufficientFunds" end time: Mar 31 18:09 PDT
"Database.BuyCartInsufficientFunds" time elapsed: 00:00:01
----------------------------------------------------------

29/35 Testing: ConsoleInterface.AddItemToMultipleUsers
29/35 Test: ConsoleInterface.AddItemToMultipleUsers
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleInterface.AddItemToMultipleUsers"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleInterface.AddItemToMultipleUsers" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleInterface.AddItemToMultipleUsers
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleInterface
[ RUN      ] ConsoleInterface.AddItemToMultipleUsers
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddItemToMultipleUsers/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddItemToMultipleUsers/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddItemToMultipleUsers/output.txt
/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_checker.cpp:56: Failure
Value of: solutionConsole.CompareCart(studentConsole)
  Actual: false (Mismatch between search result hits: Expected: [{name: Hidden Figures DVD,
 info: Genre: Drama Rating: PG,
 stock: 1 left.,
 price: 17.99
}],
 actual: [])
Expected: true
[  FAILED  ] ConsoleInterface.AddItemToMultipleUsers (1057 ms)
[----------] 1 test from ConsoleInterface (1057 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1057 ms total)
[  PASSED  ] 0 tests.
[  FAILED  ] 1 test, listed below:
[  FAILED  ] ConsoleInterface.AddItemToMultipleUsers

 1 FAILED TEST
<end of output>
Test time =   1.06 sec
----------------------------------------------------------
Test Failed.
"ConsoleInterface.AddItemToMultipleUsers" end time: Mar 31 18:09 PDT
"ConsoleInterface.AddItemToMultipleUsers" time elapsed: 00:00:01
----------------------------------------------------------

30/35 Testing: Database.BuySingleStockItemMultipleUsers
30/35 Test: Database.BuySingleStockItemMultipleUsers
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=Database.BuySingleStockItemMultipleUsers"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"Database.BuySingleStockItemMultipleUsers" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = Database.BuySingleStockItemMultipleUsers
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from Database
[ RUN      ] Database.BuySingleStockItemMultipleUsers
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuySingleStockItemMultipleUsers/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuySingleStockItemMultipleUsers/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuySingleStockItemMultipleUsers/output.txt
[       OK ] Database.BuySingleStockItemMultipleUsers (1050 ms)
[----------] 1 test from Database (1050 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1051 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.05 sec
----------------------------------------------------------
Test Passed.
"Database.BuySingleStockItemMultipleUsers" end time: Mar 31 18:09 PDT
"Database.BuySingleStockItemMultipleUsers" time elapsed: 00:00:01
----------------------------------------------------------

31/35 Testing: ConsoleErrors.ViewCartUnknownUser
31/35 Test: ConsoleErrors.ViewCartUnknownUser
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleErrors.ViewCartUnknownUser"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleErrors.ViewCartUnknownUser" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleErrors.ViewCartUnknownUser
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleErrors
[ RUN      ] ConsoleErrors.ViewCartUnknownUser
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ViewCartUnknownUser/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ViewCartUnknownUser/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/ViewCartUnknownUser/output.txt
[       OK ] ConsoleErrors.ViewCartUnknownUser (993 ms)
[----------] 1 test from ConsoleErrors (993 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (994 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.00 sec
----------------------------------------------------------
Test Passed.
"ConsoleErrors.ViewCartUnknownUser" end time: Mar 31 18:09 PDT
"ConsoleErrors.ViewCartUnknownUser" time elapsed: 00:00:00
----------------------------------------------------------

32/35 Testing: ConsoleErrors.BuyCartUnknownUser
32/35 Test: ConsoleErrors.BuyCartUnknownUser
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleErrors.BuyCartUnknownUser"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleErrors.BuyCartUnknownUser" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleErrors.BuyCartUnknownUser
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleErrors
[ RUN      ] ConsoleErrors.BuyCartUnknownUser
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartUnknownUser/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartUnknownUser/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/BuyCartUnknownUser/output.txt
[       OK ] ConsoleErrors.BuyCartUnknownUser (1082 ms)
[----------] 1 test from ConsoleErrors (1082 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1083 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.09 sec
----------------------------------------------------------
Test Passed.
"ConsoleErrors.BuyCartUnknownUser" end time: Mar 31 18:09 PDT
"ConsoleErrors.BuyCartUnknownUser" time elapsed: 00:00:01
----------------------------------------------------------

33/35 Testing: ConsoleErrors.AddInvalidHitToCart
33/35 Test: ConsoleErrors.AddInvalidHitToCart
Command: "/home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/amazon_tests" "--gtest_filter=ConsoleErrors.AddInvalidHitToCart"
Directory: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests
"ConsoleErrors.AddInvalidHitToCart" start time: Mar 31 18:09 PDT
Output:
----------------------------------------------------------
Running main() from gtest_main.cc
Note: Google Test filter = ConsoleErrors.AddInvalidHitToCart
[==========] Running 1 test from 1 test case.
[----------] Global test environment set-up.
[----------] 1 test from ConsoleErrors
[ RUN      ] ConsoleErrors.AddInvalidHitToCart
This test is executing your program with the following command line: 
/usr/bin/valgrind --tool=memcheck -q --leak-check=yes --error-exitcode=113 /home/cs104/cs104hw/hw-jesalisb/hw4/amazon /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddInvalidHitToCart/database.txt
Your program's STDIN was piped from: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddInvalidHitToCart/input.txt
Your program's STDOUT was written to: /home/cs104/cs104hw/hw-jesalisb/hw4/hw4_pre_tests/amazon_tests/testFiles/AddInvalidHitToCart/output.txt
[       OK ] ConsoleErrors.AddInvalidHitToCart (1075 ms)
[----------] 1 test from ConsoleErrors (1075 ms total)

[----------] Global test environment tear-down
[==========] 1 test from 1 test case ran. (1075 ms total)
[  PASSED  ] 1 test.
<end of output>
Test time =   1.08 sec
----------------------------------------------------------
Test Passed.
"ConsoleErrors.AddInvalidHitToCart" end time: Mar 31 18:09 PDT
"ConsoleErrors.AddInvalidHitToCart" time elapsed: 00:00:01
----------------------------------------------------------

